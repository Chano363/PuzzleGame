/* 学号 姓名 班级 */

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/

/* 提示：空文件，仅为了提醒你不要忘记首行 && 不要把文件名弄错 */
#include "pullze.h"

using namespace std;
/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
char menu() 
{
    cout << "---------------------------------------------------------" << endl;
    cout << " A.内部数组，原样输出" << endl;
    cout << " B.内部数组，生成提示行列并输出" << endl;
    cout << " C.内部数组，游戏版" << endl;
    cout << " --------------------------------------------------------" << endl;
    cout << " D.n*n的框架(无分隔线)，原样输出" << endl;
    cout << " E.n*n的框架(无分隔线)，含提示行列" << endl;
    cout << " F.n*n的框架(无分隔线)，显示初始状态，鼠标移动可显示坐标" << endl;
    cout << " G.cmd图形界面完整版(无分隔线)" << endl;
    cout << " --------------------------------------------------------" << endl;
    cout << " H.n*n的框架(有分隔线)，原样输出" << endl;
    cout << " I.n*n的框架(有分隔线)，含提示行列" << endl;
    cout << " J.n*n的框架(有分隔线)，显示初始状态，鼠标移动可显示坐标" << endl;
    cout << " K.cmd图形界面完整版(有分隔线)" << endl;
    cout << " --------------------------------------------------------" << endl;
    cout << " Q.退出" << endl;
    cout << "---------------------------------------------------------" << endl;
    cout << "[请选择:] ";

    char c;
    while (1) {
        c = getchar();
        if ((c >= 'A' && c <= 'K') || (c >= 'a' && c <= 'k') || c == 'Q' || c == 'q') break;
    }
    putchar(c);
    putchar('\n');
    Sleep(200);
    return (c >= 'a' && c <= 'z') ? (c - 'a' + 'A') : c; // 转换为大写
}

// 等待用户输入"End"结束
void end_wait() {
    char buf[100] = { 0 };
    int x, y;
    cct_getxy(x, y);
    cin.ignore(100, '\n');

    while (1) {
        cct_gotoxy(x, y);
        cout << "                                ";
        cct_gotoxy(x, y);
        cout << "本小题结束，请输入End继续...";
        cin.getline(buf, 100, '\n');
        if (strlen(buf) == 3) {
            buf[0] = tolower(buf[0]), buf[1] = tolower(buf[1]), buf[2] = tolower(buf[2]);
            if (strcmp(buf, "end") == 0) break;
        }
        cin.clear();
        cct_gotoxy(x, y + 1);
        cout << "输入错误，请重新输入..." << endl;
    }
}
